import streamlit as st
import pandas as pd
from include.css_and_credit import css_and_credit
st.set_page_config(page_title="Exploitation cin√©matographique", page_icon='üé¨', layout="wide")

css_and_credit()

st.header("ü§ñPr√©sentation des mod√®lesü§ñ")

st.markdown("""
<div class ="centered-content"><div class="box"><h3>Choix du type de mod√®le :</h3>
    <p>Le choix d'utiliser un mod√®le de r√©gression plut√¥t qu'un mod√®le de classification dans notre projet de pr√©diction du nombre d'entr√©es en premi√®re semaine en France repose sur la nature continue et quantitative de notre variable cible.</p>
    <p>En effet, le nombre d'entr√©es en premi√®re semaine est une mesure num√©rique qui peut prendre une gamme de valeurs continues, refl√©tant la performance d'un film dans les salles de cin√©ma. Ainsi, plut√¥t que de cat√©goriser les films en groupes pr√©d√©finis, notre objectif est de pr√©dire avec pr√©cision le nombre r√©el d'entr√©es qu'un film r√©alisera.</p>
    <p>Nous avons donc d√©cid√© de tester notre jeu de donn√©es sur plusieurs mod√®les diff√©rents :</p>
</div></div>
""", unsafe_allow_html=True)

df_modele = pd.read_csv('data/score.csv')

i = 1
cols = st.columns(5)
for idx, (mod√®le, r2, MAE) in enumerate(zip(df_modele['mod√®le'], df_modele['r2'], df_modele['MAE'])):
    unique_id = f"toggleCheckbox_{idx}"
    hidden_text_id = f"hiddenText_{idx}"
    with cols[(i-1) % 5]: 
        st.markdown(f"""
            <div class ="centered-content"><div class="box">
                <label for="{unique_id}" style="cursor: pointer;"><h4>{mod√®le}</h4></label>
                <input type="checkbox" id="{unique_id}" class="hidden-checkbox">
                <p id="{hidden_text_id}" class="hiddenText"><br>R2 : {r2}<br>MAE : {MAE}</p>
            </div></div>
        """, unsafe_allow_html=True)
    i += 1







    
