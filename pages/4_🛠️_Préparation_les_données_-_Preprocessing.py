import streamlit as st

for i in range(25):
    st.sidebar.markdown("<br>", unsafe_allow_html=True)
st.sidebar.subheader("üé•oct23_cda_exploitation-cin√©matographiqueüé•")
st.sidebar.markdown("_____________________")
st.sidebar.markdown("Manon FOUQUET")
st.sidebar.markdown("Sylvain BRAIZET")
st.sidebar.markdown("Nicolas DARTOIS")

st.header("üõ†Ô∏èPr√©paration les donn√©es-Preprocessingüõ†Ô∏è")

background_image = '''
    <style>
    .stApp {
        background-color: white;
        background-image: url("https://github.com/NicolasDartois/streamlit_2/blob/main/images/background.jpg?raw=true");
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-position: center;
    }
    .box {
        background-color: white;
        padding: 20px;
        margin-top: 20px;
        margin-bottom: 20px;
        box-shadow: 0 10px 12px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        text-align: justify;
    }
    .fit-img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Peut aussi √™tre 'contain' selon le besoin */
    display: block;
    }
    </style>
    '''
st.markdown(background_image, unsafe_allow_html=True)

st.markdown("""
<div class="box"><h3>Introduction :</h3>
    <p>Le pr√©traitement (preprocessing) des donn√©es vise √† pr√©parer les donn√©es brutes pour que notre mod√®le futur soit le plus performant possible  :</p>
    <p>‚Ä¢ Nettoyant les donn√©es en √©liminant les valeurs aberrantes (r√©alis√© juste avant la mod√©lisation), et en g√©rant les valeurs manquantes. NB : le d√©doublonnage n'√©tait pas n√©cessaire.</p>
    <p>‚Ä¢ Transformant les features en formats compatibles avec les algorithmes d'apprentissage automatique, tels que la normalisation des valeurs et les onehotencoding.</p>
    <p>‚Ä¢ En am√©liorant la qualit√© des donn√©es en calculant des scores afin d'optimiser les performances des mod√®les et de garantir des r√©sultats plus fiables.</p>
    <p>‚Ä¢ Nettoyant les donn√©es en √©liminant les valeurs aberrantes (r√©alis√© juste avant la mod√©lisation), et en g√©rant les valeurs manquantes. NB : le d√©doublonnage n'√©tait pas n√©cessaire.</p>
    <p>‚Ä¢ Transformant les features en formats compatibles avec les algorithmes d'apprentissage automatique, tels que la normalisation des valeurs et les onehotencoding.</p>
    <p>‚Ä¢ En am√©liorant la qualit√© des donn√©es en calculant des scores afin d'optimiser les performances des mod√®les et de garantir des r√©sultats plus fiables.</p>
</div>
""", unsafe_allow_html=True)

st.markdown("""
<div class="box"><h3>Traitement des valeurs manquantes :</h3>
    <p>Exemple de texte</p>
</div>
""", unsafe_allow_html=True)

st.markdown("""
<div class="box"><h3>Formatage des donn√©es :</h3>
    <p>Les √©tapes de formatage des donn√©es :</p>
    <p>‚Ä¢ Onehotencoding des genres.</p>
    <p>‚Ä¢ Onehotencoding de l'origine du pays du film (en ayant retenu que 3 cat√©gories : France ou USA ou autre (si France et USA sont en False).</p>
    <p>‚Ä¢ Conversion et reformatage des donn√©es budgets : identification de toutes les devises diff√©rentes, conversion en euros en utilisant le taux de change √† date de chaque devise.</p>
    <p>‚Ä¢ Extraction des jours, jours_semaine, mois de la date de sortie des films, puis standardisation cyclique des variables obtenues.</p>
    <p>‚Ä¢ Mise en oeuvre d'un score acteurs, d'un score r√©alisateurs, d'un score scenaristes, d'un score distributeur.</p>
    <p>Description sch√©matique du score Acteurs :</p>
    <img src="https://github.com/NicolasDartois/streamlit_2/blob/main/images/score_acteur.png?raw=true"  class="fit-img"/>
</div>
""", unsafe_allow_html=True)

st.image('images/score_acteur.png')
